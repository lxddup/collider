{"version":3,"sources":["assets/script/Utils/Wall.js"],"names":["WallType","cc","Enum","Left","Right","Top","Bottom","Class","Component","properties","type","width","start","collider","getComponent","BoxCollider","node","winSize","height","wallWidth","x","y","size","getContentSize"],"mappings":";;;;;;AAAA,IAAIA,QAAQ,GAAGC,EAAE,CAACC,IAAH,CAAQ;AACpBC,EAAAA,IAAI,EAAE,CADc;AAEpBC,EAAAA,KAAK,EAAE,CAFa;AAGpBC,EAAAA,GAAG,EAAE,CAHe;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAAR,CAAf;AAOAL,EAAE,CAACM,KAAH,CAAS;AACL,aAASN,EAAE,CAACO,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE;AACF,iBAASV,QAAQ,CAACG,IADhB;AAEFO,MAAAA,IAAI,EAAEV;AAFJ,KADE;AAMRW,IAAAA,KAAK,EAAE;AANC,GAHP;AAYL;AACAC,EAAAA,KAAK,EAAE,iBAAY;AACf,QAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBb,EAAE,CAACc,WAArB,CAAf;;AACA,QAAI,CAACF,QAAL,EAAe;AACX;AACH;;AAED,QAAIG,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIN,IAAI,GAAG,KAAKA,IAAhB;AAEA,QAAIC,KAAK,GAAGV,EAAE,CAACgB,OAAH,CAAWN,KAAvB;AACA,QAAIO,MAAM,GAAGjB,EAAE,CAACgB,OAAH,CAAWC,MAAxB;AAEA,QAAIC,SAAS,GAAG,KAAKR,KAArB;;AAEA,QAAID,IAAI,KAAKV,QAAQ,CAACG,IAAtB,EAA4B;AACxBa,MAAAA,IAAI,CAACE,MAAL,GAAcA,MAAd;AACAF,MAAAA,IAAI,CAACL,KAAL,GAAaQ,SAAb;AACAH,MAAAA,IAAI,CAACI,CAAL,GAAS,CAAT;AACAJ,MAAAA,IAAI,CAACK,CAAL,GAASH,MAAM,GAAC,CAAhB;AACH,KALD,MAMK,IAAIR,IAAI,KAAKV,QAAQ,CAACI,KAAtB,EAA6B;AAC9BY,MAAAA,IAAI,CAACE,MAAL,GAAcA,MAAd;AACAF,MAAAA,IAAI,CAACL,KAAL,GAAaQ,SAAb;AACAH,MAAAA,IAAI,CAACI,CAAL,GAAST,KAAT;AACAK,MAAAA,IAAI,CAACK,CAAL,GAASH,MAAM,GAAC,CAAhB;AACH,KALI,MAMA,IAAIR,IAAI,KAAKV,QAAQ,CAACK,GAAtB,EAA2B;AAC5BW,MAAAA,IAAI,CAACL,KAAL,GAAaA,KAAb;AACAK,MAAAA,IAAI,CAACE,MAAL,GAAcC,SAAd;AACAH,MAAAA,IAAI,CAACI,CAAL,GAAST,KAAK,GAAC,CAAf;AACAK,MAAAA,IAAI,CAACK,CAAL,GAASH,MAAT;AACH,KALI,MAMA,IAAIR,IAAI,KAAKV,QAAQ,CAACM,MAAtB,EAA8B;AAC/BU,MAAAA,IAAI,CAACL,KAAL,GAAaA,KAAb;AACAK,MAAAA,IAAI,CAACE,MAAL,GAAcC,SAAd;AACAH,MAAAA,IAAI,CAACI,CAAL,GAAST,KAAK,GAAC,CAAf;AACAK,MAAAA,IAAI,CAACK,CAAL,GAAS,CAAT;AACH;;AAEDR,IAAAA,QAAQ,CAACS,IAAT,GAAgBN,IAAI,CAACO,cAAL,EAAhB;AACH;AArDI,CAAT","sourceRoot":"/","sourcesContent":["var WallType = cc.Enum({\n   Left: 0,\n   Right: 1,\n   Top: 2,\n   Bottom: 3\n});\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        type: {\n            default: WallType.Left,\n            type: WallType\n        },\n        \n        width: 5\n    },\n\n    // use this for initialization\n    start: function () {\n        var collider = this.getComponent(cc.BoxCollider);\n        if (!collider) {\n            return;\n        }\n        \n        var node = this.node;\n        var type = this.type;\n        \n        var width = cc.winSize.width;\n        var height = cc.winSize.height;\n        \n        var wallWidth = this.width;\n        \n        if (type === WallType.Left) {\n            node.height = height;\n            node.width = wallWidth;\n            node.x = 0;\n            node.y = height/2;\n        }\n        else if (type === WallType.Right) {\n            node.height = height;\n            node.width = wallWidth;\n            node.x = width;\n            node.y = height/2;\n        }\n        else if (type === WallType.Top) {\n            node.width = width;\n            node.height = wallWidth;\n            node.x = width/2;\n            node.y = height;\n        }\n        else if (type === WallType.Bottom) {\n            node.width = width;\n            node.height = wallWidth;\n            node.x = width/2;\n            node.y = 0;\n        }\n        \n        collider.size = node.getContentSize();\n    }\n});\n"]}